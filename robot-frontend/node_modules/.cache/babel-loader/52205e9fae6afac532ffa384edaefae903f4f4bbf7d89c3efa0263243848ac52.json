{"ast":null,"code":"var _jsxFileName = \"/Users/chetannakhate/Desktop/Instagram bot/robot-frontend/src/components/DashboardPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Grid, List, ListItem, ListItemText, Typography, Button, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DashboardPage = () => {\n  _s();\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const devices = [{\n    id: 1,\n    name: 'Device 1'\n  }, {\n    id: 2,\n    name: 'Device 2'\n  }, {\n    id: 3,\n    name: 'Device 3'\n  }];\n  const installedApps = selectedDevice ? [{\n    id: 1,\n    name: 'App 1'\n  }, {\n    id: 2,\n    name: 'App 2'\n  }, {\n    id: 3,\n    name: 'App 3'\n  }] : [];\n  const availableApps = [{\n    id: 4,\n    name: 'App 4'\n  }, {\n    id: 5,\n    name: 'App 5'\n  }, {\n    id: 6,\n    name: 'App 6'\n  }];\n  const handleDeviceSelect = device => {\n    setSelectedDevice(device);\n  };\n  const handleAppInstall = app => {\n    // Add your installation logic here\n    console.log(`Installing app ${app.name} on device ${selectedDevice === null || selectedDevice === void 0 ? void 0 : selectedDevice.name}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            align: \"center\",\n            gutterBottom: true,\n            children: \"Devices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: devices.map(device => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              onClick: () => handleDeviceSelect(device),\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: device.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this)\n            }, device.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: selectedDevice ? /*#__PURE__*/_jsxDEV(Paper, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            align: \"center\",\n            gutterBottom: true,\n            children: \"Installed Apps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: installedApps.map(app => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: app.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this)\n            }, app.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            align: \"center\",\n            gutterBottom: true,\n            children: \"Available Apps to Install\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: availableApps.map(app => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: app.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => handleAppInstall(app),\n                children: \"Install\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)]\n            }, app.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          children: \"Select a device to view its apps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"Q83t4NkKG/t3n/Hdc4hVMGguhC8=\");\n_c = DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","Container","Grid","List","ListItem","ListItemText","Typography","Button","Paper","jsxDEV","_jsxDEV","DashboardPage","_s","selectedDevice","setSelectedDevice","devices","id","name","installedApps","availableApps","handleDeviceSelect","device","handleAppInstall","app","console","log","children","container","spacing","item","xs","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","button","onClick","primary","color","_c","$RefreshReg$"],"sources":["/Users/chetannakhate/Desktop/Instagram bot/robot-frontend/src/components/DashboardPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Grid, List, ListItem, ListItemText, Typography, Button, Paper } from '@mui/material';\n\ninterface Device {\n  id: number;\n  name: string;\n}\n\ninterface App {\n  id: number;\n  name: string;\n}\n\nexport const DashboardPage = () => {\n  const [selectedDevice, setSelectedDevice] = useState<Device | null>(null);\n  const devices: Device[] = [\n    { id: 1, name: 'Device 1' },\n    { id: 2, name: 'Device 2' },\n    { id: 3, name: 'Device 3' },\n  ];\n\n  const installedApps: App[] = selectedDevice ? [\n    { id: 1, name: 'App 1' },\n    { id: 2, name: 'App 2' },\n    { id: 3, name: 'App 3' },\n  ] : [];\n\n  const availableApps: App[] = [\n    { id: 4, name: 'App 4' },\n    { id: 5, name: 'App 5' },\n    { id: 6, name: 'App 6' },\n  ];\n\n  const handleDeviceSelect = (device: Device) => {\n    setSelectedDevice(device);\n  };\n\n  const handleAppInstall = (app: App) => {\n    // Add your installation logic here\n    console.log(`Installing app ${app.name} on device ${selectedDevice?.name}`);\n  };\n\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        <Grid item xs={3}>\n          <Paper>\n            <Typography variant=\"h5\" align=\"center\" gutterBottom>Devices</Typography>\n            <List>\n              {devices.map(device => (\n                <ListItem key={device.id} button onClick={() => handleDeviceSelect(device)}>\n                  <ListItemText primary={device.name} />\n                </ListItem>\n              ))}\n            </List>\n          </Paper>\n        </Grid>\n        <Grid item xs={9}>\n          {selectedDevice ? (\n            <Paper>\n              <Typography variant=\"h5\" align=\"center\" gutterBottom>Installed Apps</Typography>\n              <List>\n                {installedApps.map(app => (\n                  <ListItem key={app.id}>\n                    <ListItemText primary={app.name} />\n                  </ListItem>\n                ))}\n              </List>\n              <Typography variant=\"h5\" align=\"center\" gutterBottom>Available Apps to Install</Typography>\n              <List>\n                {availableApps.map(app => (\n                  <ListItem key={app.id}>\n                    <ListItemText primary={app.name} />\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => handleAppInstall(app)}>Install</Button>\n                  </ListItem>\n                ))}\n              </List>\n            </Paper>\n          ) : (\n            <Typography variant=\"body1\" align=\"center\">Select a device to view its apps</Typography>\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}