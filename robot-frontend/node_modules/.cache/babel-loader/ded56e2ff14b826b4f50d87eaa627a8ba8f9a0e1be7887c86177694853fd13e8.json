{"ast":null,"code":"var _jsxFileName = \"/Users/chetannakhate/Desktop/Instagram bot/robot-frontend/src/components/DashboardPage.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Grid, List, ListItem, ListItemText, Typography, Button, Paper, AppBar, Toolbar } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DashboardPage = props => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [isLoading, setLoading] = useState(false);\n  const [selectedApp, setSelectedApp] = useState(null);\n  const [devices, setDevices] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const [installedApps, setApps] = useState([]);\n  const [availableApps, setAvailableApps] = useState([]);\n  useEffect(() => {\n    const getDevices = async () => {\n      try {\n        const username = window.localStorage.getItem('username');\n        const response = await fetch(`http://127.0.0.1:5000/get_user_computers/${username}`);\n        const jsonData = await response.json();\n        setDevices(jsonData);\n        console.log(jsonData);\n      } catch (error) {\n        console.error('Error fetching devices:', error);\n      }\n    };\n    getDevices();\n  }, []);\n\n  // const availableApps: App[] = [\n  //   { id: 4, name: 'App 4', bot_runs: ['Run 1', 'Run 2', 'Run 3'] },\n  //   { id: 5, name: 'App 5', bot_runs: ['Run 1', 'Run 2', 'Run 3'] },\n  //   { id: 6, name: 'App 6', bot_runs: ['Run 1', 'Run 2', 'Run 3'] },\n  // ];\n\n  const getApps = async device => {\n    try {\n      if (device) {\n        // const device = device.id;\n        const response = await fetch(`http://127.0.0.1:5000/get_computer_bots/${device.id}`);\n        const jsonData = await response.json();\n        console.log(jsonData);\n        // const apps = await getApps(); // Wait for the apps data to be fetched\n        setApps(jsonData);\n        return jsonData; // Return the apps data\n      }\n      return []; // Return an empty array if no device is selected\n    } catch (error) {\n      console.error('Error fetching apps:', error);\n      return []; // Return an empty array in case of error\n    }\n  };\n  const getAvailableApps = async device => {\n    try {\n      if (device) {\n        // const device = device.id;\n        const username = window.localStorage.getItem('username');\n        const response = await fetch(`http://127.0.0.1:5000/get_available_bots/${username}/${device.id}`);\n        const jsonData = await response.json();\n        console.log(jsonData);\n        // const apps = await getApps(); // Wait for the apps data to be fetched\n        setAvailableApps(jsonData);\n        return jsonData; // Return the apps data\n      }\n      return []; // Return an empty array if no device is selected\n    } catch (error) {\n      console.error('Error fetching apps:', error);\n      return []; // Return an empty array in case of error\n    }\n  };\n  const handleDeviceSelect = async device => {\n    setSelectedDevice(device);\n    getApps(device);\n    getAvailableApps(device);\n    // const apps = await getApps(); // Wait for the apps data to be fetched\n    // setApps(apps);\n    setSelectedApp(null); // Reset selected app when changing devices\n  };\n  const handleAppSelect = app => {\n    setSelectedApp(app);\n  };\n\n  // const handleAppInstall = async (app: AvailableApp) => {\n  //   console.log(`Installing app ${app.name} on device ${selectedDevice?.name}`);\n  //   try {\n  //     if (app) {\n  //       // const device = device.id;\n  //       const username = window.localStorage.getItem('username');\n  //       const response = fetch(`http://127.0.0.1:5000/trigger_bot_download/${selectedDevice?.id}/${app.id}`);\n  //       const jsonData = (await response).json();\n  //       console.log(jsonData);\n  //       return jsonData; // Return the apps data\n  //     }\n  //     return []; // Return an empty array if no device is selected\n  //   } catch (error) {\n  //     console.error('Error requesting download bot:', error);\n  //   }\n  // };\n\n  const handleAppInstall = async app => {\n    _s();\n    const [isLoading, setLoading] = useState(false);\n    const handleButtonClick = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/trigger_bot_download/${selectedDevice === null || selectedDevice === void 0 ? void 0 : selectedDevice.id}/${app.id}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n            // Add any other headers as needed\n          },\n          body: JSON.stringify({\n            computer_id: selectedDevice === null || selectedDevice === void 0 ? void 0 : selectedDevice.id,\n            bot_id: app.id\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        console.log('Success:', data);\n        // Handle the response data as needed\n      } catch (error) {\n        console.error('Error:', error);\n        // Handle errors\n      } finally {\n        setLoading(false);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleButtonClick,\n        disabled: isLoading,\n        children: isLoading ? 'Loading...' : 'Trigger Bot Download'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  };\n  _s(handleAppInstall, \"L2kia1mxOZVbKExDfCbHuwhndlw=\");\n  function handleSignOut() {\n    window.localStorage.clear();\n    props.callback(\"LoginPage\");\n    // throw new Error('Function not implemented.');\n  }\n  function handleAppDownload() {\n    throw new Error('Function not implemented.');\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"App Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => handleSignOut(),\n          children: \"Sign out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: devices[0] && /*#__PURE__*/_jsxDEV(Paper, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            align: \"center\",\n            gutterBottom: true,\n            children: \"Devices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: devices.map(device => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              onClick: () => handleDeviceSelect(device),\n              selected: (selectedDevice === null || selectedDevice === void 0 ? void 0 : selectedDevice.id) === device.id,\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: device.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this)\n            }, device.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: selectedDevice ? /*#__PURE__*/_jsxDEV(Paper, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            align: \"center\",\n            gutterBottom: true,\n            children: \"Installed Apps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: installedApps.map(app => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              onClick: () => handleAppSelect(app),\n              selected: (selectedApp === null || selectedApp === void 0 ? void 0 : selectedApp.id) === app.id,\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: app.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this)\n            }, app.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            align: \"center\",\n            children: \"To make a new device available, Install the app on your computer.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => handleAppDownload(),\n            children: \"Download App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: selectedDevice && /*#__PURE__*/_jsxDEV(Paper, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            align: \"center\",\n            gutterBottom: true,\n            children: \"Available Apps to Install\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: availableApps.map(app => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: app.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => handleAppInstall(app),\n                children: \"Install\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this)]\n            }, app.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), selectedApp && /*#__PURE__*/_jsxDEV(Paper, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        gutterBottom: true,\n        children: [selectedApp.name, \" Run History\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: selectedApp.bot_runs.map((run, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: run\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s2(DashboardPage, \"9ErPzj+uYNctt67S8i5cSjN8774=\");\n_c = DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Grid","List","ListItem","ListItemText","Typography","Button","Paper","AppBar","Toolbar","jsxDEV","_jsxDEV","DashboardPage","props","_s2","_s","$RefreshSig$","isLoading","setLoading","selectedApp","setSelectedApp","devices","setDevices","selectedDevice","setSelectedDevice","installedApps","setApps","availableApps","setAvailableApps","getDevices","username","window","localStorage","getItem","response","fetch","jsonData","json","console","log","error","getApps","device","id","getAvailableApps","handleDeviceSelect","handleAppSelect","app","handleAppInstall","handleButtonClick","method","headers","body","JSON","stringify","computer_id","bot_id","ok","Error","data","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","handleSignOut","clear","callback","handleAppDownload","position","variant","component","sx","flexGrow","color","container","spacing","item","xs","align","gutterBottom","map","button","selected","primary","name","bot_runs","run","index","_c","$RefreshReg$"],"sources":["/Users/chetannakhate/Desktop/Instagram bot/robot-frontend/src/components/DashboardPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Grid, List, ListItem, ListItemText, Typography, Button, Paper, AppBar, Toolbar } from '@mui/material';\n\ninterface Device {\n  id: string;\n  name: string;\n  os: string;\n}\n\ninterface App {\n  id: number;\n  name: string;\n  bot_runs: string[]; // Assuming run history is an array of strings\n}\n\ninterface AvailableApp {\n  id: number;\n  name: string;\n  dirictory_name: string;\n  url: string;\n  info_url: string;\n}\n\n\nexport const DashboardPage = (props: {callback: (curr: string) => void}) => {\n      const [isLoading, setLoading] = useState(false);\n  const [selectedApp, setSelectedApp] = useState<App | null>(null);\n  const [devices, setDevices] = useState<Device[]>([]);\n  const [selectedDevice, setSelectedDevice] = useState<Device | null>(null);\n  const [installedApps, setApps] = useState<App[]>([]);\n  const [availableApps, setAvailableApps] = useState<AvailableApp[]>([]);\n\n  useEffect(() => {\n    const getDevices = async () => {\n      try {\n        const username = window.localStorage.getItem('username');\n        const response = await fetch(`http://127.0.0.1:5000/get_user_computers/${username}`);\n        const jsonData = await response.json();\n        setDevices(jsonData);\n        console.log(jsonData);\n      } catch (error) {\n        console.error('Error fetching devices:', error);\n      }\n    };\n\n    getDevices();\n  }, []); \n\n\n  // const availableApps: App[] = [\n  //   { id: 4, name: 'App 4', bot_runs: ['Run 1', 'Run 2', 'Run 3'] },\n  //   { id: 5, name: 'App 5', bot_runs: ['Run 1', 'Run 2', 'Run 3'] },\n  //   { id: 6, name: 'App 6', bot_runs: ['Run 1', 'Run 2', 'Run 3'] },\n  // ];\n\n  const getApps = async (device: Device) => {\n    try {\n      if (device) {\n        // const device = device.id;\n        const response = await fetch(`http://127.0.0.1:5000/get_computer_bots/${device.id}`);\n        const jsonData = await response.json();\n        console.log(jsonData);\n        // const apps = await getApps(); // Wait for the apps data to be fetched\n        setApps(jsonData);\n        return jsonData; // Return the apps data\n      }\n      return []; // Return an empty array if no device is selected\n    } catch (error) {\n      console.error('Error fetching apps:', error);\n      return []; // Return an empty array in case of error\n    }\n  };\n\n  \n\n  const getAvailableApps = async (device: Device) => {\n    try {\n      if (device) {\n        // const device = device.id;\n        const username = window.localStorage.getItem('username');\n        const response = await fetch(`http://127.0.0.1:5000/get_available_bots/${username}/${device.id}`);\n        const jsonData = await response.json();\n        console.log(jsonData);\n        // const apps = await getApps(); // Wait for the apps data to be fetched\n        setAvailableApps(jsonData);\n        return jsonData; // Return the apps data\n      }\n      return []; // Return an empty array if no device is selected\n    } catch (error) {\n      console.error('Error fetching apps:', error);\n      return []; // Return an empty array in case of error\n    }\n  };\n\n  const handleDeviceSelect = async (device: Device) => {\n    setSelectedDevice(device);\n    getApps(device);\n    getAvailableApps(device);\n    // const apps = await getApps(); // Wait for the apps data to be fetched\n    // setApps(apps);\n    setSelectedApp(null); // Reset selected app when changing devices\n  };\n  \n\n  \n\n  const handleAppSelect = (app: App) => {\n    setSelectedApp(app);\n  };\n\n  // const handleAppInstall = async (app: AvailableApp) => {\n  //   console.log(`Installing app ${app.name} on device ${selectedDevice?.name}`);\n  //   try {\n  //     if (app) {\n  //       // const device = device.id;\n  //       const username = window.localStorage.getItem('username');\n  //       const response = fetch(`http://127.0.0.1:5000/trigger_bot_download/${selectedDevice?.id}/${app.id}`);\n  //       const jsonData = (await response).json();\n  //       console.log(jsonData);\n  //       return jsonData; // Return the apps data\n  //     }\n  //     return []; // Return an empty array if no device is selected\n  //   } catch (error) {\n  //     console.error('Error requesting download bot:', error);\n  //   }\n  // };\n\n  const handleAppInstall = async (app: AvailableApp) => {\n    const [isLoading, setLoading] = useState(false);\n  \n    const handleButtonClick = async () => {\n      setLoading(true);\n  \n      try {\n        const response = await fetch(`http://127.0.0.1:5000/trigger_bot_download/${selectedDevice?.id}/${app.id}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            // Add any other headers as needed\n          },\n          body: JSON.stringify({\n            computer_id: selectedDevice?.id,\n            bot_id: app.id,\n          }),\n        });\n  \n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n  \n        const data = await response.json();\n        console.log('Success:', data);\n        // Handle the response data as needed\n  \n      } catch (error) {\n        console.error('Error:', error);\n        // Handle errors\n      } finally {\n        setLoading(false);\n      }\n    };\n  \n    return (\n      <div>\n        <button onClick={handleButtonClick} disabled={isLoading}>\n          {isLoading ? 'Loading...' : 'Trigger Bot Download'}\n        </button>\n      </div>\n    );\n  };\n\n  function handleSignOut(): void {\n\n    window.localStorage.clear();\n    props.callback(\"LoginPage\")\n    // throw new Error('Function not implemented.');\n  }\n\n  function handleAppDownload(): void {\n    throw new Error('Function not implemented.');\n  }\n\n  return (\n    <Container>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            App Name\n          </Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => handleSignOut()}>Sign out</Button>\n        </Toolbar>\n      </AppBar>\n\n      <Grid container spacing={3}>\n        <Grid item xs={3}>\n        {devices[0] && (\n          <Paper>\n          <br />\n            <Typography variant=\"h5\" align=\"center\" gutterBottom >Devices</Typography>\n            <List>\n              {devices.map((device: Device) => (\n                <ListItem key={device.id} button onClick={() => handleDeviceSelect(device)} selected={selectedDevice?.id === device.id}>\n                  <ListItemText primary={device.name} />\n                </ListItem>\n              ))}\n            </List>\n          </Paper>)}\n        </Grid>\n\n        <Grid item xs={6}>\n          {selectedDevice ? (\n            <Paper>\n              <br />\n              <Typography variant=\"h5\" align=\"center\" gutterBottom>Installed Apps</Typography>\n              <List>\n                {installedApps.map(app => (\n                  <ListItem key={app.id} button onClick={() => handleAppSelect(app)} selected={selectedApp?.id === app.id}>\n                    <ListItemText primary={app.name} />\n                  </ListItem>\n                ))}\n              </List>\n            </Paper>\n          ) : (\n            \n            <Paper>\n            <br />\n            <Typography variant=\"body1\" align=\"center\">To make a new device available, Install the app on your computer.</Typography>\n            <br />\n            <Button variant=\"contained\" color=\"primary\" onClick={() => handleAppDownload()}>Download App</Button>\n            <br />\n            <br />\n            </Paper>\n          )}\n        </Grid>\n\n        <Grid item xs={3}>\n          {selectedDevice && (\n            <Paper>\n              <br />\n              <Typography variant=\"h5\" align=\"center\" gutterBottom>Available Apps to Install</Typography>\n              <List>\n                {availableApps.map(app => (\n                  <ListItem button key={app.id}>\n                    <ListItemText primary={app.name} />\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => handleAppInstall(app)}>Install</Button>\n                  </ListItem>\n                ))}\n              </List>\n            </Paper>\n          )}\n        </Grid>\n      </Grid>\n\n      {selectedApp && (\n        <Paper>\n          <Typography variant=\"h5\" align=\"center\" gutterBottom>{selectedApp.name} Run History</Typography>\n          <List>\n            {selectedApp.bot_runs.map((run, index) => (\n              <ListItem key={index}>\n                <ListItemText primary={run} />\n              </ListItem>\n            ))}\n          </List>\n        </Paper>\n      )}\n    </Container>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}